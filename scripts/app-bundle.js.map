{"version":3,"sources":["app.js","contact-details.js","contact-edition.js","contact-gateway.js","contact-list.js","contact-photo.js","environment.js","main.js","models.js","not-found.js","resources/index.js","validation/index.js","resources/value-converters/filter-by.js","resources/value-converters/group-by.js","resources/value-converters/order-by.js"],"names":["App","configureRouter","config","router","title","map","route","redirect","name","moduleId","nav","mapUnknownRoutes","ContactDetails","contactGateway","activate","params","getById","id","then","contact","navModel","setTitle","fullName","tryDelete","confirm","delete","navigateToRoute","ContactEdition","of","validationController","isNew","undefined","save","validate","console","log","errors","length","create","update","ContactGateway","httpClient","configure","useStandardConfiguration","withBaseUrl","contactsUrl","getAll","fetch","response","json","dto","fromObject","method","body","updatePhoto","file","headers","type","ContactList","contacts","splice","push","apply","ContactPhoto","photo","item","debug","testing","LogManager","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","addAppender","setLevel","logLevel","info","developmentLogging","plugin","start","setRoot","PhoneNumber","number","ensure","required","maxLength","on","src","Object","assign","EmailAddress","address","email","Address","street","postalCode","city","state","country","SocialProfile","username","Contact","firstName","lastName","company","birthday","phoneNumbers","emailAddresses","addresses","socialProfiles","note","satisfies","value","obj","isNaN","Date","parse","withMessage","addPhoneNumber","addEmailAddress","addAddress","addSocialProfile","isPerson","toUpperCase","NotFound","globalResources","FilterByValueConverter","toView","array","properties","trim","toLowerCase","filter","some","property","includes","GroupByValueConverter","groups","Map","key","group","get","items","set","Array","from","values","OrderByValueConverter","direction","slice","directionFactor","sort","item1","item2","value1","value2"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  configureRouter(config, router) {\n  \tthis.router = router;\n  \tconfig.title = \"Fun With Aurelia\";\n  \tconfig.map([\n      { route: '', redirect: 'contacts' },\n      { route: 'contacts', name: 'contacts', moduleId: 'contact-list', nav: true, title: 'Contacts' },\n      { route: 'contacts/new', name: 'contact-creation',  \n        moduleId: 'contact-edition', title: 'New contact' }, \n      { route: 'contacts/:id', name: 'contact-details',  \n        moduleId: 'contact-details' }, \n      { route: 'contacts/:id/edit', name: 'contact-edition',  \n        moduleId: 'contact-edition' }, \n      { route: 'contacts/:id/photo', name: 'contact-photo', \n        moduleId: 'contact-photo' }, \n  \t]);\n  \tconfig.mapUnknownRoutes('not-found');\n  }\n}\n","import {inject} from 'aurelia-framework'; \nimport {ContactGateway} from './contact-gateway'; \n \n@inject(ContactGateway) \nexport class ContactDetails { \n  constructor(contactGateway) { \n    this.contactGateway = contactGateway; \n  } \n \n  activate(params, config) { \n    return this.contactGateway.getById(params.id) \n      .then(contact => { \n        this.contact = contact; \n        config.navModel.setTitle(contact.fullName); \n      }); \n  } \n\n  tryDelete() { \n    if (confirm('Do you want to delete this contact?')) { \n      this.contactGateway.delete(this.contact.id) \n        .then(() => { this.router.navigateToRoute('contacts'); }); \n    } \n  } \n  \n} \n","import {inject, NewInstance} from 'aurelia-framework'; \nimport {ContactGateway} from './contact-gateway'; \nimport {Contact} from './models'; \nimport {Router} from 'aurelia-router'; \nimport {ValidationController} from 'aurelia-validation';\n\n@inject(ContactGateway, NewInstance.of(ValidationController), Router) \nexport class ContactEdition { \n  constructor(contactGateway, validationController, router) { \n    this.contactGateway = contactGateway; \n    this.router = router;\n    this.validationController = validationController;\n  } \n \n  activate(params, config) { \n    this.isNew = params.id === undefined; \n    if (this.isNew) { \n      this.contact = new Contact(); \n    } \n    else { \n      return this.contactGateway.getById(params.id).then(contact => { \n        this.contact = contact; \n        config.navModel.setTitle(contact.fullName); \n      }); \n    } \n  } \n\n  save() { \n    this.validationController.validate().then(errors => {\n      console.log(errors);\n      if (errors.length > 0) {\n        return;\n      }\n      if (this.isNew) { \n        this.contactGateway.create(this.contact)  \n        .then(() => this.router.navigateToRoute('contacts')); \n      } \n      else { \n        this.contactGateway.update(this.contact.id, this.contact)  \n        .then(() => this.router.navigateToRoute('contact-details',  \n          { id: this.contact.id })); \n      } \n    }); \n\n  } \n\n} \n","import {inject} from 'aurelia-framework'; \nimport {HttpClient, json} from 'aurelia-fetch-client'; \nimport {Contact} from './models'; \nimport environment from './environment'; \n \n@inject(HttpClient) \nexport class ContactGateway { \n \n  constructor(httpClient) { \n    this.httpClient = httpClient.configure(config => { \n      config \n        .useStandardConfiguration() \n        .withBaseUrl(environment.contactsUrl); \n    }); \n  } \n \n  getAll() {    \n    return this.httpClient.fetch('contacts') \n      .then(response => response.json()) \n      .then(dto => dto.map(Contact.fromObject)); \n  } \n \n  getById(id) { \n    return this.httpClient.fetch(`contacts/${id}`) \n      .then(response => response.json()) \n      .then(Contact.fromObject); \n  } \n\n  create(contact) { \n    return this.httpClient.fetch('contacts',  \n      { method: 'POST', body: json(contact) }); \n  } \n \n  update(id, contact) { \n    return this.httpClient.fetch(`contacts/${id}`,  \n      { method: 'PUT', body: json(contact) }); \n  } \n\n  updatePhoto(id, file) { \n    return this.httpClient.fetch(`contacts/${id}/photo`, {  \n      method: 'PUT', \n      headers: { 'Content-Type': file.type }, \n      body: file \n    }); \n  } \n\n  delete(id) { \n    return this.httpClient.fetch(`contacts/${id}`, { method: 'DELETE' }); \n  } \n\n} \n","import {inject} from 'aurelia-framework'; \nimport {ContactGateway} from './contact-gateway'; \n \n@inject(ContactGateway) \nexport class ContactList { \n \n  contacts = []; \n \n  constructor(contactGateway) { \n    this.contactGateway = contactGateway; \n  } \n \n  activate() { \n    return this.contactGateway.getAll() \n      .then(contacts => { \n        this.contacts.splice(0); \n        this.contacts.push.apply(this.contacts, contacts); \n      }); \n  } \n} \n","import {inject} from 'aurelia-framework'; \nimport {Router} from 'aurelia-router'; \nimport {ContactGateway} from './contact-gateway'; \n \n@inject(ContactGateway, Router) \nexport class ContactPhoto { \n   \n  constructor(contactGateway, router) { \n    this.contactGateway = contactGateway; \n    this.router = router; \n  } \n \n  activate(params, config) { \n    return this.contactGateway.getById(params.id).then(contact => { \n      this.contact = contact; \n      config.navModel.setTitle(this.contact.fullName); \n    }); \n  } \n  save() { \n    if (this.photo && this.photo.length > 0) { \n      this.contactGateway.updatePhoto( \n        this.contact.id,  \n        this.photo.item(0) \n      ).then(() => { \n        this.router.navigateToRoute( \n          'contact-details',  \n          { id: this.contact.id }); \n      }); \n    } \n  } \n} \n","export default {\n  debug: true,\n  testing: true,\n  contactsUrl: 'http://localhost:8000/'\n};\n","import environment from './environment';\nimport * as LogManager from 'aurelia-logging';\nimport {ConsoleAppender} from 'aurelia-logging-console';\n\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('validation')\n    .feature('resources');\n\n  LogManager.addAppender(new ConsoleAppender());\n  LogManager.setLevel(LogManager.logLevel.info);\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {ValidationRules} from 'aurelia-validation'; \n\nexport class PhoneNumber { \n  constructor() {\n    ValidationRules\n      .ensure('type').required().maxLength(25)\n      .ensure('number').required().maxLength(25)\n      .on(this);\n  } \n\n  static fromObject(src) { \n    return Object.assign(new PhoneNumber(), src); \n  } \n \n  type = 'Home'; \n  number = ''; \n} \n \nexport class EmailAddress { \n  constructor() {\n    ValidationRules\n      .ensure('type').required().maxLength(25)\n      .ensure('address').required().maxLength(250).email()\n      .on(this);\n  } \n\n  static fromObject(src) { \n    return Object.assign(new EmailAddress(), src); \n  } \n \n  type = 'Home'; \n  address = ''; \n} \n \nexport class Address { \n  constructor() {\n    ValidationRules\n      .ensure('type').required().maxLength(25)\n      .ensure('number').required().maxLength(100)\n      .ensure('street').required().maxLength(100)\n      .ensure('postalCode').required().maxLength(25)\n      .ensure('city').required().maxLength(100)\n      .ensure('state').maxLength(100)\n      .ensure('country').required().maxLength(100)\n      .on(this);\n  } \n\n  static fromObject(src) { \n    return Object.assign(new Address(), src); \n  } \n \n  type = 'Home'; \n  number = ''; \n  street = ''; \n  postalCode = ''; \n  city = ''; \n  state = ''; \n  country = ''; \n} \n \nexport class SocialProfile { \n  constructor() {\n    ValidationRules\n      .ensure('type').required().maxLength(25)\n      .ensure('username').required().maxLength(100)\n      .on(this);\n  } \n \n  static fromObject(src) { \n    return Object.assign(new SocialProfile(), src); \n  } \n \n  type = 'GitHub'; \n  username = ''; \n} \n \nexport class Contact { \n\n constructor() {\n    ValidationRules\n      .ensure('firstName').maxLength(100)\n      .ensure('lastName').maxLength(100)\n      .ensure('company').maxLength(100)\n      .ensure('birthday')\n      .satisfies((value, obj) => value === null || value === undefined\n                   || value === '' || !isNaN(Date.parse(value)))\n        .withMessage('${$displayName} must be a valid date.')\n      .ensure('note').maxLength(2000)\n      .on(this);\n  } \n\n  static fromObject(src) { \n    const contact = Object.assign(new Contact(), src); \n    contact.phoneNumbers = contact.phoneNumbers \n      .map(PhoneNumber.fromObject); \n    contact.emailAddresses = contact.emailAddresses \n      .map(EmailAddress.fromObject); \n    contact.addresses = contact.addresses \n      .map(Address.fromObject); \n    contact.socialProfiles = contact.socialProfiles \n      .map(SocialProfile.fromObject); \n    return contact; \n  } \n \n  firstName = ''; \n  lastName = ''; \n  company = ''; \n  birthday = ''; \n  phoneNumbers = []; \n  emailAddresses = []; \n  addresses = []; \n  socialProfiles = []; \n  note = ''; \n\n  get isPerson() { \n    return this.firstName || this.lastName; \n  } \n \n  get fullName() { \n    const fullName = this.isPerson  \n      ? `${this.firstName} ${this.lastName}`  \n      : this.company; \n    return fullName || ''; \n  } \n\n  get firstLetter() { \n    const name = this.lastName || this.firstName || this.company; \n    return name ? name[0].toUpperCase() : '?'; \n  } \n\n  addPhoneNumber() {\n    this.phoneNumbers.push(new PhoneNumber());\n  }\n\n  addEmailAddress() { \n    this.emailAddresses.push(new EmailAddress()); \n  } \n \n  addAddress() { \n    this. addresses.push(new Address()); \n  } \n \n  addSocialProfile() { \n    this.socialProfiles.push(new SocialProfile()); \n  } \n\n} \n","export class NotFound {}","export function configure(config) {\n\tconfig.globalResources([\n\t\t'./value-converters/order-by',\n\t\t'./value-converters/group-by',\n\t\t'./value-converters/filter-by',\n\t\t]);\n}\n","export function configure(config) { \n  config \n    .plugin('aurelia-validation'); \n} \n","export class FilterByValueConverter { \n  toView(array, value, ...properties) { \n    value = (value || '').trim().toLowerCase(); \n    if (!value) { \n      return array; \n    } \n    return array.filter(item =>  \n      properties.some(property =>  \n        (item[property] || '').toLowerCase().includes(value))); \n  } \n} \n","export class GroupByValueConverter { \n  toView(array, property) { \n    const groups = new Map(); \n    for (let item of array) { \n      let key = item[property]; \n      let group = groups.get(key); \n      if (!group) { \n        group = { key, items: [] }; \n        groups.set(key, group); \n      } \n      group.items.push(item); \n    } \n    return Array.from(groups.values()); \n  } \n} \n","export class OrderByValueConverter { \n  toView(array, property, direction = 'asc') { \n    array = array.slice(0); \n    const directionFactor = direction == 'desc' ? -1 : 1;  \n    array.sort((item1, item2) => { \n      const value1 = item1[property]; \n      const value2 = item2[property]; \n      if (value1 > value2) { \n        return directionFactor; \n      } else if (value1 < value2) { \n        return -directionFactor; \n      } else { \n        return 0; \n      } \n    }); \n    return array; \n  } \n} \n"],"sourceRoot":"../src"}